// Telegram Bot - —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

require("dotenv").config();
const TelegramBot = require("node-telegram-bot-api");
const telegramHandlers = require("./src/handlers/telegramHandlers");

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });

console.log("Bug Report Bot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...");

bot.onText(/\/start/, (msg) => telegramHandlers.startCommand(bot, msg));
bot.onText(/\/setcredentials/, (msg) =>
  telegramHandlers.setCredentialsCommand(bot, msg)
);
bot.onText(/\/addproject/, (msg) =>
  telegramHandlers.addProjectCommand(bot, msg)
);
bot.onText(/\/projects/, (msg) => telegramHandlers.projectsCommand(bot, msg));

bot.on("message", (msg) => {
  if (!msg.text?.startsWith("/")) {
    console.log(
      `üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${msg.from.id}: "${msg.text}"`
    );
    telegramHandlers.handleMessage(bot, msg);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤ (inline –∫–Ω–æ–ø–∫–∏)
bot.on("callback_query", (callbackQuery) => {
  telegramHandlers.handleCallbackQuery(bot, callbackQuery);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on("error", (error) => {
  console.error("–û—à–∏–±–∫–∞ Telegram Bot:", error);
});

bot.on("polling_error", (error) => {
  console.error("–û—à–∏–±–∫–∞ polling:", error);
});

console.log("Bug Report Telegram Bot –∑–∞–ø—É—â–µ–Ω!");
